collections {
 group {
    name: "audiolist";
    script {
       public repeat_state, // 0 == not show | 1 == show
              shuffle_state,
              play_button_state;
    }
    images {
       image: "background_audio_1.jpg" RAW;
       image: "prev_icon.png" LOSSY 80;
       image: "prev_focused_icon.png" LOSSY 80;
       image: "play_icon.png" RAW;
       image: "play_focused_icon.png" RAW;
       image: "pause_icon.png" LOSSY 80;
       image: "pause_icon_focused.png" LOSSY 80;
       image: "next_icon.png" LOSSY 80;
       image: "next_focused_icon.png" LOSSY 80;
       image: "shuffle_icon_off.png" LOSSY 80;
       image: "shuffle_icon_on.png" LOSSY 80;
       image: "repeat_icon.png" LOSSY 80;
       image: "repeat_all_icon.png" LOSSY 80;
       image: "repeat_one_icon.png" LOSSY 80;
    }
   // min: 800 600;
   //  max: 1024 768;
    parts {
       part {
          name: "bg_rect"; //gray retangle that fills the entire window
          type: RECT;
          description {
             state: "default" 0.0;
             color: 255 255 255 55;
             rel1 {
                relative: 0.0 0.0;
                offset: 0 0;
             }
             rel2 {
                relative: 1.0 1.0;
                offset: 0 0;
             }
          }
       }
       part {
          name: "background_img" ;
          type: IMAGE;
          mouse_events: 0;
          description {
              state: "default" 0.0;
              rel1 {
                 relative: 0.0 0.0; 
                 offset: 0 0;
              }
              rel2 {
                 relative: 1.0 1.0;
                 offset: -1 -1;
              }
              image {
                normal: "background_audio_1.jpg";
              }
          }
       }

       ADD_STATUS_BAR("EMC - MUSIC");

       ADD_STATUS_BACKBT()

      part{
        name: "artists_button";
        type: TEXT;
        mouse_events: 1;
        effect: SOFT_SHADOW;
        description {
          state: "default" 0.0;
          color: 255 255 255 255;
          color2: 0 0 0 255;
          fixed: 1 1;
          rel1 {
                relative: 0.1 1.0 ; 
                to_y: "status_bar";
                offset: 0 0;
          }
          rel2 {
                relative: 0.3 1.0;
                to_y: "status_bar";
                offset: 0 50;
          }
          text {
            text: "ARTISTS";
            size: 2;
            fit: 0 1;
            font: "sans:style=Bold";
            min: 1 1;
            ellipsis: -1;
          }
        }
        description {
          state: "artists_button_focused" 0.0;
          inherit: "default" 0.0;
          color: 50 150 255 255;
        }
       }
       part{
        name: "albums_button";
        type: TEXT;
        effect: SOFT_SHADOW;
        mouse_events: 1;
        description {
          state: "default" 0.0;
          color: 255 255 255 255;
          color2: 0 0 0 255;
          fixed: 1 1;
          rel1 {
                relative: 0.4 1.0 ; to: "status_bar";
          }
          rel2 {
                relative: 0.6 1.0;
                to_y: "status_bar";
                offset: 0 50;
          }
          text {
            text: "ALBUMS";
            size: 2;
            fit: 0 1;
            font: "sans:style=Bold";
            min: 1 1;
            ellipsis: -1;
          }
        }
        description {
          state: "albums_button_focused" 0.0;
          inherit: "default" 0.0;
          color: 50 150 255 255;
        }
       }
       part{
        name: "playlist_button";
        type: TEXT;
        effect: SOFT_SHADOW;
        mouse_events: 1;
        description {
          state: "default" 0.0;
          color: 255 255 255 255;
          color2: 0 0 0 255;
          fixed: 1 1;
          rel1 {
                relative: 0.7 1.0 ; to: "status_bar";
          }
          rel2 {
                relative: 0.9 1.0;
                to_y: "status_bar";
                offset: 0 50;
          }
          text {
            text: "PLAYLIST";
            size: 2;
            fit: 0 1;
            font: "sans:style=Bold";
            min: 1 1;
            ellipsis: -1;
          }
        }
        description {
          state: "playlist_button_focused" 0.0;
          inherit: "default" 0.0;
          color: 50 150 255 255;
        }
       }
        part{
        name: "down_part";
        type: RECT;
        mouse_events: 1;
        description {
          state: "default" 0.0;
          color: 0 0 0 100;
          rel1 {
                relative: 0.0 1.0;
                offset: 5 -50;
             }
             rel2 {
                relative: 1.0 1.0;
                offset: -5 -6;
             }
          }
        description {
          state: "down_part_clicked" 0.0;
          inherit: "default" 0.0;
          rel1 {
                relative: 0.0 1.0;
                offset: 5 5;
          }
          rel2 {
                relative: 1.0 1.1; to: "background_img";
                offset: -5 -5;
          }
        }
       }
       part{
        name: "prev_button";
        type: IMAGE;
        mouse_events: 1;
        description {
          state: "default" 0.0;
          //color: 100 255 150 255;
          rel1 {
                relative: 0.0 1.0 ; 
                to: "down_part";
                offset: 5 -40;
          }
          rel2 {
                relative: 0.0 1.0; 
                to: "down_part";
                offset: 40 -5;
          }
          image {
            normal: "prev_icon.png";
          }
        }
        description {
          state: "prev_button_focused" 0.0;
          inherit: "default" 0.0;
          image.normal: "prev_focused_icon.png";
          //color: 255 255 0 220;
        }
       }
       part{
        name: "playpause_bt";
        type: IMAGE;
        mouse_events: 1;
        description {
          state: "default" 0.0;
          rel1 {
                relative: 0.0 1.0 ; 
                to: "down_part";
                offset: 45 -40;
          }
          rel2 {
                relative: 0.0 1.0; 
                to: "down_part";
                offset: 80 -5;
          }
          image {
            normal: "play_icon.png";
          }
        }
        description {
          state: "play_focused" 0.0;
          inherit: "default" 0.0;
          image.normal: "play_focused_icon.png";
        }
        description {
          state: "pause_unfocused" 0.0;
          inherit: "default" 0.0;
          image.normal: "pause_icon.png";
        }
        description {
          state: "pause_focused" 0.0;
          inherit: "pause_unfocused" 0.0;
          image.normal: "pause_icon_focused.png";
        }
       }
       part{
        name: "next_button";
        type: IMAGE;
        mouse_events: 1;
        description {
          state: "default" 0.0;
          //color: 100 255 150 255;
          rel1 {
                relative: 0.0 1.0 ; 
                to: "down_part";
                offset: 85 -40;
          }
          rel2 {
                relative: 0.0 1.0; 
                to: "down_part";
                offset: 125 -5;
          }
          image {
            normal: "next_icon.png";
          }
        }
        description {
          state: "next_button_focused" 0.0;
          inherit: "default" 0.0;
          image.normal: "next_focused_icon.png";
          //color: 255 255 0 220;
        }
       }
       part{
        name: "music_temp_restante";
        type: TEXT;
        mouse_events: 0;
        description {
          state: "default" 0.0;
          color: 255 255 255 255;
          fixed: 1 1;
          rel1 {
                relative: 1.0 0.0 ;
                to: "next_button";
                offset: 10 0;
          }
          rel2 {
                relative: 1.0 1.0;
                to: "next_button";
                offset: 60 -1;
          }
          text {
            text: "--:--";
            fit: 0 1;
            font: "sans:style=Bold";
            min: 1 1;
            max: 1 1;
            ellipsis: -1;
          }
        }
       }
       part {
         name: "audiolist/progressbar";
         type: SWALLOW;
         description {
           state: "default" 0.0;
           min: 63 0;
           rel1 {
             relative: 1.0 0.0 ; 
             to_y: "down_part";
             to_x: "music_temp_restante";
             offset: 15 5;
           }
           rel2 {
             relative: 0.0 1.0;
             to_x: "music_temp_total";
             to_y: "down_part";
             offset: -15 -5;
             //"down_part";
           }
         }
       }
       part{
        name: "music_temp_total";
        type: TEXT;
        mouse_events: 0;
        description {
          state: "default" 0.0;
          color: 255 255 255 255;
          fixed: 1 1;
          rel1 {
                relative: 0.0 0.0 ;
                to: "repeat_button";
                offset: -70 -5;
          }
          rel2 {
                relative: 0.0 1.0;
                to: "repeat_button";
                offset: -20 5;
          }
          text {
            text: "--:--";
            fit: 0 1;
            font: "sans:style=Bold";
            min: 1 1;
            ellipsis: -1;
          }
        }
       }
       part{
        name: "repeat_button";
        type: IMAGE;
        mouse_events: 1;
        description {
          state: "default" 0.0; //default is 'repeat off'
          //color: 100 255 150 255;
          rel1 {
                relative: 1.0 1.0 ; 
                to: "down_part";
                offset: -95 -35;
          }
          rel2 {
                relative: 1.0 1.0; 
                to: "down_part";
                offset: -60 -10;
          }
          image {
            normal: "repeat_icon.png";
          }
        }
        description {
          state: "repeat_button_default_focused" 0.0;
          inherit: "default" 0.0;
          rel1.offset: -95 -39;
          rel2.offset: -60 -6;
        }
        description {
          state: "repeat_all" 0.0;
          //inherit: "default" 0.0;
          rel1 {
                relative: 1.0 1.0 ; 
                to: "down_part";
                offset: -95 -35;
          }
          rel2 {
                relative: 1.0 1.0; 
                to: "down_part";
                offset: -60 -10;
          }
          image {
            normal: "repeat_all_icon.png";
          }
          //color: 255 255 0 220;
       }
       description {
          state: "repeat_all_focused" 0.0;
          inherit: "repeat_all" 0.0;
          rel1.offset: -95 -39;
          rel2.offset: -60 -6;
          image {
            normal: "repeat_all_icon.png";
          }
          //color: 255 255 0 220;
       }
        description {
          state: "repeat_one" 0.0;
          inherit: "default" 0.0;
          image {
            normal: "repeat_one_icon.png";
          }
          //color: 255 255 0 220;
       }
       description {
          state: "repeat_one_focused" 0.0;
          inherit: "repeat_one" 0.0;
          rel1.offset: -95 -39;
          rel2.offset: -60 -6;
          image {
            normal: "repeat_one_icon.png";
          }
          //color: 255 255 0 220;
       }
       part{
        name: "shuffle_button";
        type: IMAGE;
        mouse_events: 1;
        description {
          state: "default" 0.0; //default is 'random off'
          //color: 100 255 150 255;
          rel1 {
                relative: 1.0 1.0 ; 
                to: "down_part";
                offset: -50 -35;
          }
          rel2 {
                relative: 1.0 1.0; 
                to: "down_part";
                offset: -10 -10;
          }
          image {
            normal: "shuffle_icon_off.png";
          }
        }
        description {
          state: "shuffle_button_off_focused" 0.0;
          inherit: "default";
          rel1.offset: -50 -39;
          rel2.offset: -10 -6;
        }
        description {
          state: "shuffle_button_on" 0.0;
          inherit: "default";
          image.normal: "shuffle_icon_on.png";
          //color: 255 255 0 220;
        }
        description {
          state: "shuffle_button_on_focused" 0.0;
          inherit: "shuffle_button_on";
          rel1.offset: -50 -39;
          rel2.offset: -10 -6;
       }
       part{
        name: "audiolist/list";
        type: SWALLOW;
        description {
          state: "default" 0.0;
          rel1 {
                relative: 0.0 1.00 ; 
                to_x: "background_img";
                to_y: "status_bar";
                offset: 5 50;
          }
          rel2 {
                relative: 1.0 0.0;
                to_x: "background_img";
                to_y: "down_part";
                offset: -5 -5;
          }
        }
        description {
          state: "down_part_clicked" 0.0;
          inherit: "default" 0.0;
          rel2 {
                relative: 1.0 0.0;
                to_x: "background_img";
                to_y: "down_part";
                offset: -5 -20;
          }
        }
       }

    } /*end parts */

    programs {
/* Signals */
      program {
         name: "audiolist_next";
         signal: "audiolist.show.next";
         source: "*";
      }
      program {
         name: "audiolist_prev";
         signal: "audiolist.show.prev";
         source: "*";
      }
      program {
         name: "audiolist_select_current";
         signal: "audiolist.select.current";
         source: "*";
      }
/* Signals End */
      program {
         name: "artists_focused";
         signal: "mouse,in";
         source: "artists_button";
         action: STATE_SET "artists_button_focused" 0.0;
         target: "artists_button";
         transition: LINEAR 0.1;
      }
      program {
         name: "artists_mouse_out";
         signal: "mouse,out";
         source: "artists_button";
         action: STATE_SET "default" 0.0;
         target: "artists_button";
      }
      program {
         name: "artists_mouse_click";
         signal: "mouse,clicked,1";
         source: "artists_button";
         action: SIGNAL_EMIT "audiolist.selected.artists" "artists_button";
      }
      program {
         name: "albums_focused";
         signal: "mouse,in";
         source: "albums_button";
         action: STATE_SET "albums_button_focused" 0.0;
         target: "albums_button";
         transition: LINEAR 0.1;
      }
      program {
         name: "albums_mouse_out";
         signal: "mouse,out";
         source: "albums_button";
         action: STATE_SET "default" 0.0;
         target: "albums_button";
      }
      program {
         name: "albums_mouse_click";
         signal: "mouse,clicked,1";
         source: "albums_button";
         action: SIGNAL_EMIT "audiolist.selected.albums" "albums_button";
      }
      program {
         name: "playlist_focused";
         signal: "mouse,in";
         source: "playlist_button";
         action: STATE_SET "playlist_button_focused" 0.0;
         target: "playlist_button";
         transition: LINEAR 0.1;
      }
      program {
         name: "playlist_mouse_out";
         signal: "mouse,out";
         source: "playlist_button";
         action: STATE_SET "default" 0.0;
         target: "playlist_button";
      }
      program {
         name: "playlists_mouse_click";
         signal: "mouse,clicked,1";
         source: "playlists_button";
         action: SIGNAL_EMIT "audiolist.selected.playlist" "playlists_button";
      }
      program {
         name: "prev_button_focused";
         signal: "mouse,in";
         source: "prev_button";
         action: STATE_SET "prev_button_focused" 0.0;
         target: "prev_button";
         transition: LINEAR 0.1;
      }
      program {
         name: "prev_button_mouse_out";
         signal: "mouse,out";
         source: "prev_button";
         action: STATE_SET "default" 0.0;
         target: "prev_button";
         transition: LINEAR 0.1;
      }
      program {
         name: "prev_mouse_clicked";
         signal: "mouse,clicked,1";
         source: "prev_button";
         action: SIGNAL_EMIT "audiolist.playlist.prev" "prev_button";
      }

      program {
         name: "playpause_focused";
         signal: "mouse,in";
         source: "playpause_bt";
         script {
           if (get_int(play_button_state) == 0) {
             set_state(PART:"playpause_bt", "play_focused", 0.0);
           } else {
             set_state(PART:"playpause_bt", "pause_focused", 0.0);
           }
         }
      }
      program {
         name: "playpause_unfocused";
         signal: "mouse,out";
         source: "playpause_bt";
         script {
           if (get_int(play_button_state) == 0) {
             set_state(PART:"playpause_bt", "default", 0.0);
           } else {
             set_state(PART:"playpause_bt", "pause_unfocused", 0.0);
           }
         }
      }
/*
      program {
        name: "play_mouse_in";
        signal: "play.mouse.in";
        action: STATE_SET "play_pause_button_focused" 0.0;
        target: "play_pause_button";
        transition: SINUSOIDAL 0.1;
      }
      program {
        name: "pause_mouse_in";
        signal: "pause.mouse.in";
        action: STATE_SET "play_pause_button_pause_focused" 0.0;
        target: "play_pause_button";
        transition: SINUSOIDAL 0.1;
      }
      program {
        name: "play_mouse_out";
        signal: "play.mouse.out";
        action: STATE_SET "default" 0.0;
        target: "play_pause_button";
        transition: SINUSOIDAL 0.2;
      }
      program {
        name: "pause_mouse_out";
        signal: "pause.mouse.out";
        action: STATE_SET "play_pause_button_pause" 0.0;
        target: "play_pause_button";
        transition: SINUSOIDAL 0.1;
      }
*/
      program {
         name: "play_pause_mouse_clicked";
         signal: "mouse,clicked,1";
         source: "playpause_bt";
         action: SIGNAL_EMIT "audiolist.playlist.playpause" "playpause_bt";
      }
      program {
        name: "playlist_playing";
        signal: "audiolist.playlist.playing";
        source: "*";
        script {
          set_state(PART:"playpause_bt", "pause_unfocused", 0.0);
          set_int(play_button_state, 1);
        }
      }
      program {
        name: "playlistpaused";
        signal: "audiolist.playlist.paused";
        source: "*";
        script {
          set_state(PART:"playpause_bt", "default", 0.0);
          set_int(play_button_state, 0);
        }
      }
      program {
         name: "next_focused";
         signal: "mouse,in";
         source: "next_button";
         action: STATE_SET "next_button_focused" 0.0;
         target: "next_button";
         transition: LINEAR 0.1;
      }
      program {
         name: "next_mouse_out";
         signal: "mouse,out";
         source: "next_button";
         action: STATE_SET "default" 0.0;
         target: "next_button";
         transition: LINEAR 0.1;
      }
      program {
         name: "next_mouse_clicked";
         signal: "mouse,clicked,1";
         source: "next_button";
         action: SIGNAL_EMIT "audiolist.playlist.next" "next_button";
      }
      program {
         name: "repeat_focused";
         signal: "mouse,in";
         source: "repeat_button";
         script {
          if (get_int(repeat_state) == 0){
             emit("repeat.off.focused", "");
          }
          else if (get_int(repeat_state) == 1){
             emit("repeat.all.focused", "");
          }
          else if (get_int(repeat_state) == 2){
             emit("repeat.one.focused", "");
          }
        }
      }
      program {
         name: "repeat_off_focused";
         signal: "repeat.off.focused";
         source: "*";
         action: STATE_SET "default" 0.0;
         target: "repeat_button";
         transition: SINUSOIDAL 0.2;
         after: "repeat_off_focused_s";
      }
      program {
         name: "repeat_off_focused_s";
         action: STATE_SET "repeat_button_default_focused" 0.0;
         target: "repeat_button";
         transition: SINUSOIDAL 0.2;
         after: "repeat_off_focused";
      }
      program {
         name: "repeat_all_focused";
         signal: "repeat.all.focused";
         source: "*";
         action: STATE_SET "repeat_all" 0.0;
         target: "repeat_button";
         transition: SINUSOIDAL 0.2;
         after: "repeat_all_focused_s";
      }
      program {
         name: "repeat_all_focused_s";
         action: STATE_SET "repeat_all_focused" 0.0;
         target: "repeat_button";
         transition: SINUSOIDAL 0.2;
         after: "repeat_all_focused";
      }
      program {
         name: "repeat_one_focused";
         signal: "repeat.one.focused";
         source: "*";
         action: STATE_SET "repeat_one" 0.0;
         target: "repeat_button";
         transition: SINUSOIDAL 0.2;
         after: "repeat_one_focused_s";
      }
      program {
         name: "repeat_one_focused_s";
         action: STATE_SET "repeat_one_focused" 0.0;
         target: "repeat_button";
         transition: SINUSOIDAL 0.2;
         after: "repeat_one_focused";
      }
      program {
         name: "repeat_mouse_out";
         signal: "mouse,out";
         source: "repeat_button";
         script {
          if (get_int(repeat_state) == 0){
             set_state(PART:"repeat_button", "default", 0.0);
          } else if (get_int(repeat_state) == 1){
             set_state(PART:"repeat_button", "repeat_all", 0.0);
          } else if (get_int(repeat_state) == 2){
             set_state(PART:"repeat_button", "repeat_one", 0.0);
          }
        }
      }
      program {
        name: "repeat_clicked";
        signal: "mouse,clicked,*";
        source: "repeat_button";
        action: SIGNAL_EMIT "audiolist.playlist.repeat" "repeat_button";
      }
      program {
        name: "playlist_repeat_all";
        signal: "audiolist.playlist.repeat.all";
        source: "*";
        script {
          set_state(PART:"repeat_button", "repeat_all", 0.0);
          set_int(play_button_state, 1);
        }
      }
      program {
        name: "playlist_repeat_one";
        signal: "audiolist.playlist.repeat.one";
        source: "*";
        script {
          set_state(PART:"repeat_button", "repeat_one", 0.0);
          set_int(play_button_state, 2);
        }
      }
      program {
        name: "playlist_repeat_off";
        signal: "audiolist.playlist.repeat.off";
        source: "*";
        script {
          set_state(PART:"repeat_button", "default", 0.0);
          set_int(play_button_state, 0);
        }
      }
      program {
         name: "shuffle_focused";
         signal: "mouse,in";
         source: "shuffle_button";
         script {
          if (get_int(shuffle_state) == 1){
            emit("shuffle.button.on.focused", "");
          }
          else if (get_int(shuffle_state) == 0)
            emit("shuffle.button.off.focused", "");
          }
         }
       }
       program {
         name: "shuffle_on_focused";
         signal: "shuffle.button.on.focused";
         source: "*";
         action: STATE_SET "shuffle_button_on" 0.0;//_focused" 0.0;
         target: "shuffle_button";
         transition: SINUSOIDAL 0.2;
         after: "shuffle_on_focused_s";
       }
       program {
         name: "shuffle_on_focused_s";
         action: STATE_SET "shuffle_button_on_focused" 0.0;
         target: "shuffle_button";
         transition: SINUSOIDAL 0.2;
         after: "shuffle_on_focused";
       }
       program {
         name: "shuffle_off_focused";
         signal: "shuffle.button.off.focused";
         source: "*";
         action: STATE_SET "shuffle_button_off_focused" 0.0;
         target: "shuffle_button";
         transition: SINUSOIDAL 0.2;
         after: "shuffle_off_focused_s";
       }
       program {
         name: "shuffle_off_focused_s";
         action: STATE_SET "default" 0.0;
         target: "shuffle_button";
         transition: SINUSOIDAL 0.2;
         after: "shuffle_off_focused";
       }
      program {
         name: "shuffle_mouse_out";
         signal: "mouse,out";
         source: "shuffle_button";
         script {
          if (get_int(shuffle_state) == 1){
            set_state(PART:"shuffle_button", "shuffle_button_on", 0.0);
          }
          else if (get_int(shuffle_state) == 0)
            set_state(PART:"shuffle_button", "default", 0.0);
         }
      }
      program {
        name: "shuffle_clicked";
        signal: "mouse,clicked,*";
        source: "shuffle_button";
        action: SIGNAL_EMIT "audiolist.playlist.random" "shuffle_button";
      }
      program {
        name: "playlist_shuffle_off";
        signal: "audiolist.playlist.shuffle.off";
        source: "*";
        script {
          set_state(PART:"shuffle_button", "default", 0.0);
          set_int(shuffle_state, 0);
        }
      }
      program {
        name: "playlist_shuffle_on";
        signal: "audiolist.playlist.shuffle.on";
        source: "*";
        script {
          set_state(PART:"shuffle_button", "shuffle_button_on", 0.0);
          set_int(shuffle_state, 1);
        }
      }
      program {
         //name: "down_part_clicked";
         signal: "mouse,clicked,*";
         source: "down_part";
         action: STATE_SET "down_part_clicked" 0.0;
         target: "down_part";
         target: "audiolist/list";
         transition: LINEAR 0.3;
      }
      program {
         //name: "audiolist/list_clicked";
         signal: "mouse,clicked,*";
         source: "audiolist/list";
         action: STATE_SET "default" 0.0;
         target: "down_part";
         target: "audiolist/list";
         transition: LINEAR 0.3;
      }
      program {
         name: "backbt_focused";
         signal: "mouse,in";
         source: "backbt";
         action: STATE_SET "backbt_focused" 0.0;
         target: "backbt";
         transition: LINEAR 0.1;
      }
      program {
         name: "backbt_mouse_out";
         signal: "mouse,out";
         source: "backbt";
         action: STATE_SET "default" 0.0;
         target: "backbt";
      }
      program {
         name: "backbt_mouse_clicked";
         signal: "mouse,clicked,*";
         source: "backbt";
         action: SIGNAL_EMIT "audiolist.selected.back" "backbt";
      }

      BACK_PROG_ADD(audiolist);

    } /* end programs */
   } 
 }/*end group "audiolist" */
}/* end collections */ 
