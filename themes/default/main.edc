/* http://imgarcade.com */
/* To emit signals to default.edj and print the result
   using edje_player in command line: 
   
    $ edje_player -p -S default.edj
   
   and type the signal to emit to the default.edj,like
   
      signal "string_signal_name" "source" 
   
   for example:
      signal "main.show.netx" "*"   
 */

collections {
 group {
    name: "main";
    script {
       public audio_state, // 0 == not show | 1 == show
              video_state,
              settings_state,
              exit_window_state;
    }
    images {
       image: "background.jpg" RAW;
       image: "app_window.jpg" RAW;
       image: "audio_icon.png" LOSSY 80;
       image: "video_icon.png" LOSSY 80;
       image: "settings_icon.png" LOSSY 80;
       image: "return_icon.png" LOSSY 80;
       image: "confirm_exit_window.png" RAW;
       image: "yes_bt.png" LOSSY 90;
       image: "no_bt.png" LOSSY 90;
       image: "exit_icon.png" LOSSY 80;
    }
    min: 800 600;
    max: 1024 768;
    parts {
       part {
          name: "bg_rect"; //gray retangle that fills the entire window
          type: RECT;
          description {
             state: "default" 0.0;
             color: 255 255 255 55;
             rel1 {
                relative: 0.0 0.0;
                offset: 0 0;
             }
             rel2 {
                relative: 1.0 1.0;
                offset: 0 0;
             }
          }
       }
       part {
          name: "background_img" ;
          type: IMAGE;
          mouse_events: 0;
          description {
              state: "default" 0.0;
              rel1 {
                 relative: 0.0 0.0; 
                 offset: 10 10;
              }
              rel2 {
                 relative: 1.0 1.0;
                 offset: -10 -10;
              }
              image {
                normal: "background.jpg";
              }
          }
       }
       part {
          name: "notification_bar"; // the bar in the top of window, not used yet
          type: RECT;
          mouse_events: 1;
          description {
             state: "default" 0.0;
             color: 125 0 125 255;
             rel1 {
                relative: 0.0 0.0 ; to: "background_img";
                offset: 2 2;
             }
             rel2 {
                relative: 1.0 0.1; to: "background_img";
                offset: -2 -10;
             }
          }
       }
       part {
          name: "app_window"; // the center window that will display the
                              // applications buttons
          type: IMAGE;
          repeat_events: 1;
          mouse_events: 1;
          description {
             state: "default" 0.0;
             image.normal: "app_window.jpg";                                
             rel1 {
                relative: 0.1 0.1 ; to: "background_img";
                offset: 0 15;
             }
             rel2 {
                relative: 0.9 0.8; to: "background_img";
                offset: 0 -20;
             }
          }
          description {
             state: "show_audio" 0.0;
             inherit: "default" 0.0;
             color: 255 255 0 255;
          }
          description {
             state: "show_video" 0.0;
             inherit: "default" 0.0;
             color: 180 125 0 255;
          }
          description {
             state: "show_settings" 0.0;
             inherit: "default" 0.0;
             color: 0 0 255 255;
          }
       }
       part {
          name: "audio_bt";
          type: IMAGE;
          mouse_events: 1;
          description {
             state: "default" 0.0;
             image {
                normal: "audio_icon.png";
             }
             color: 0 255 0 255;
             rel1 {
                relative: 0.1 0.8 ; to: "background_img";
             }
             rel2 {
                relative: 0.3 0.9; to: "background_img";
             }
          }
          description {
             state: "audio_bt_mouse_in" 0.0;
             inherit: "default" 0.0;
             color: 200 200 0 255;
          }
       }
       part {
          name: "video_bt";
          type: IMAGE;
          mouse_events: 1;
          description {
             state: "default" 0.0;
             image {
                normal: "video_icon.png";
             }
             color: 0 255 0 255;
             rel1 {
                relative: 0.4 0.8 ; to: "background_img";
             }
             rel2 {
                relative: 0.6 0.9; to: "background_img";
             }
          }
          description {
             state: "video_bt_mouse_in" 0.0;
             inherit: "default" 0.0;
             color: 200 200 0 255;
          }
       }
       part {
          name: "settings_bt";
          type: IMAGE;
          mouse_events: 1;
          description {
              state: "default" 0.0;
              image {
                 normal: "settings_icon.png";
              }
              color: 0 255 0 255;
              rel1 {
                relative: 0.7 0.8 ; to: "background_img";
              }
              rel2 {
                relative: 0.9 0.9; to: "background_img";
              }
          }
          description {
             state: "settings_bt_mouse_in" 0.0;
             inherit: "default" 0.0;
             color: 200 200 0 255;
          }
       }
       part {
          name: "exit_background";
          type: RECT;
          description {
             state: "default" 0.0;
             visible: 0;
             color: 0 10 10 100;
             rel1 {
                relative: 0.0 0.0;
                offset: 0 0;
             }
             rel2 {
                relative: 1.0 1.0;
                offset: 0 0;
             }
          }
          description {
             state: "visible" 0.0;
             inherit: "default" 0.0;
             visible: 1;
          }
       }
       part {
          name: "exit_bt";
          type: IMAGE;
          mouse_events: 1;
          description {
             state: "default" 0.0;
             image.normal: "exit_icon.png";
             color: 0 255 0 255;
             rel1 {
                relative: 0.0 0.9 ; to: "background_img";
                offset: 5 5;
             }
             rel2 {
                relative: 0.1 1.0; to: "background_img";
                offset: -12 -5;
             }
          }
          description {
             state: "exit_bt_mouse_in" 0.0;
             inherit: "default" 0.0;
             color: 200 0 0 255;
          }
       }
       part { //used to confirm if you want to exit or not
          name: "confirm_exit_window";
          type: IMAGE;
          mouse_events: 0;
          description {
             state: "default" 0.0;
             visible: 0;
             image.normal: "confirm_exit_window.png";
             rel1 {
                relative: 0.05 0.1 ; to: "background_img";
                //offset: 0 0;
             }
             rel2 {
                relative: 0.95 0.8; to: "background_img";
                //offset: 0 0;
             }
          }          description {
             state: "visible" 0.0;
             inherit: "default" 0.0;
             visible: 1;
          }
       }
       part { // yes_bt is part of the confirm_exit_window
          name: "yes_bt";
          type: IMAGE;
          mouse_events: 1;
          description {
             state: "default" 0.0;
             visible: 0;
             image.normal: "yes_bt.png";
             rel1 {
                relative: 0.2 0.6; to: "confirm_exit_window";
             }
             rel2 {
                relative: 0.4 0.8; to: "confirm_exit_window";
             }
          }
          description {
             state: "visible" 0.0;
             inherit: "default" 0.0;
             visible: 1;
          }
       }
       part { // no_bt is part of the confirm_exit_window
          name: "no_bt";
          type: IMAGE;
          mouse_events: 1;
          description {
             state: "default" 0.0;
             visible: 0;
             image.normal: "no_bt.png";
             rel1 {
                relative: 0.6 0.6; to: "confirm_exit_window";
             }
             rel2 {
                relative: 0.8 0.8; to: "confirm_exit_window";
             }
          }
          description {
             state: "visible" 0.0;
             inherit: "default" 0.0;
             visible: 1;
          }
       }
    } /*end parts */

    programs {
      program { // fills the global vars(audio_state,video_state,settings_state)
                // and starts audio_state as 'show' by default
        name: state_fill;
        signal: "load";
        source: "";
        script {
          set_int(audio_state, 1);
          set_int(video_state, 0);
          set_int(settings_state, 0);
          set_int(exit_window_state, 0);

          send_message(MSG_STRING, 0, "AUDIO_STATE IN");

          set_state(PART:"app_window", "show_audio", 0.0);
          set_state(PART:"audio_bt", "audio_bt_mouse_in", 0.0);
          set_state(PART:"video_bt", "default", 0.0);
          set_state(PART:"settings_bt", "default", 0.0);
          set_state(PART:"exit_bt", "default", 0.0);
          set_state(PART:"confirm_exit_window", "default", 0.0);
          set_state(PART:"yes_bt", "default", 0.0);
          set_state(PART:"no_bt", "default", 0.0);

        }
      }
      program {
           signal: "main.show.next";
           source: "*";
           script {

            set_state(PART:"confirm_exit_window", "default", 0.0);
            set_state(PART:"yes_bt", "default", 0.0);
            set_state(PART:"no_bt", "default", 0.0);

                if (get_int(audio_state) == 1)
                {
                  set_int(audio_state, 0);
                  set_int(video_state, 1);
                  set_int(settings_state, 0);
                  set_int(exit_window_state, 0);

                  send_message(MSG_STRING, 0, "VIDEO_STATE IN");

                  set_state(PART:"app_window", "show_video", 0.0);
                  set_state(PART:"audio_bt", "default", 0.0);
                  set_state(PART:"video_bt", "video_bt_mouse_in", 0.0);
                  set_state(PART:"settings_bt", "default", 0.0);
                  set_state(PART:"exit_bt", "default", 0.0);
                }
                else if (get_int(video_state) == 1)
                {
                  set_int(audio_state, 0);
                  set_int(video_state, 0);
                  set_int(settings_state, 1);
                  set_int(exit_window_state, 0);

                  send_message(MSG_STRING, 0, "settings_STATE IN");

                  set_state(PART:"app_window", "show_settings", 0.0);
                  set_state(PART:"audio_bt", "default", 0.0);
                  set_state(PART:"video_bt", "default", 0.0);
                  set_state(PART:"settings_bt", "settings_bt_mouse_in", 0.0);
                  set_state(PART:"exit_bt", "default", 0.0);
                }
                else if (get_int(settings_state) == 1)
                {
                  set_int(audio_state, 1);
                  set_int(video_state, 0);
                  set_int(settings_state, 0);
                  set_int(exit_window_state, 0);

                  send_message(MSG_STRING, 0, "AUDIO_STATE IN");

                  set_state(PART:"app_window", "show_audio", 0.0);
                  set_state(PART:"audio_bt", "audio_bt_mouse_in", 0.0);
                  set_state(PART:"video_bt", "default", 0.0);
                  set_state(PART:"settings_bt", "default", 0.0);
                  set_state(PART:"exit_bt", "default", 0.0);
                }
                else { // if exit_bt state == in and Right is pressed,
                       // by default exit_bt == out and audio_state == in 
                  set_int(audio_state, 1);
                  set_int(video_state, 0);
                  set_int(settings_state, 0);
                  set_int(exit_window_state, 0);

                  send_message(MSG_STRING, 0, "AUDIO_STATE IN");

                  set_state(PART:"app_window", "show_audio", 0.0);
                  set_state(PART:"audio_bt", "audio_bt_mouse_in", 0.0);
                  set_state(PART:"video_bt", "default", 0.0);
                  set_state(PART:"settings_bt", "default", 0.0);
                  set_state(PART:"exit_bt", "default", 0.0);
                }
           }
      }
      program {
           signal: "main.show.prev";
           source: "*";
           script {

            set_state(PART:"confirm_exit_window", "default", 0.0);
            set_state(PART:"yes_bt", "default", 0.0);
            set_state(PART:"no_bt", "default", 0.0);

                if (get_int(audio_state) == 1)
                {
                  set_int(audio_state, 0);
                  set_int(video_state, 0);
                  set_int(settings_state, 1);
                  set_int(exit_window_state, 0);

                  send_message(MSG_STRING, 0, "settings_STATE IN");

                  set_state(PART:"app_window", "show_settings", 0.0);
                  set_state(PART:"audio_bt", "default", 0.0);
                  set_state(PART:"video_bt", "default", 0.0);
                  set_state(PART:"settings_bt", "settings_bt_mouse_in", 0.0);
                  set_state(PART:"exit_bt", "default", 0.0); 
                }
                else if (get_int(video_state) == 1)
                {
                  set_int(audio_state, 1);
                  set_int(video_state, 0);
                  set_int(settings_state, 0);
                  set_int(exit_window_state, 0);

                  send_message(MSG_STRING, 0, "AUDIO_STATE IN");

                  set_state(PART:"audio_bt", "audio_bt_mouse_in", 0.0);
                  set_state(PART:"video_bt", "default", 0.0);
                  set_state(PART:"settings_bt", "default", 0.0);
                  set_state(PART:"exit_bt", "default", 0.0);
                }
                else if (get_int(settings_state) == 1)
                {
                  set_int(audio_state, 0);
                  set_int(video_state, 1);
                  set_int(settings_state, 0);
                  set_int(exit_window_state, 0);

                  send_message(MSG_STRING, 0, "VIDEO_STATE IN");

                  set_state(PART:"app_window", "show_video", 0.0);
                  set_state(PART:"audio_bt", "default", 0.0);
                  set_state(PART:"video_bt", "video_bt_mouse_in", 0.0);
                  set_state(PART:"settings_bt", "default", 0.0);
                  set_state(PART:"exit_bt", "default", 0.0);
                }
                else { // if exit_bt state == in and Right is pressed,
                       // by default exit_bt == out and settings_state == in 
                  set_int(audio_state, 0);
                  set_int(video_state, 0);
                  set_int(settings_state, 1);
                  set_int(exit_window_state, 0);

                  send_message(MSG_STRING, 0, "settings_STATE IN");

                  set_state(PART:"app_window", "show_settings", 0.0);
                  set_state(PART:"audio_bt", "default", 0.0);
                  set_state(PART:"video_bt", "default", 0.0);
                  set_state(PART:"settings_bt", "settings_bt_mouse_in", 0.0);
                  set_state(PART:"exit_bt", "default", 0.0);
                }
           }
      }
      program {
        name: "main_select_current";
        signal: "main.select.current";
        source: "*";
        script {

           if (get_int(audio_state) == 1 && get_int(exit_window_state) == 0)
            {
              emit("main.show.audio", "");
           }
           else if (get_int(video_state) == 1 && get_int(exit_window_state) == 0)
            {
              emit("main.selected.video", "");
           }
           else if (get_int(settings_state) == 1 && get_int(exit_window_state) == 0)
            {
              emit("main.selected.settings", "");
           }
          else if (get_int(exit_window_state) == 1)
            {
              emit("main.selected.exit", "");
              send_message(MSG_STRING, 0, "EXIT NOW!");
           } 
        }
      }
      program {
        name: "main_select_back";
        signal: "main.select.back";
        source: "*";
        script {
          if (get_int(exit_window_state) == 0)
           {
            set_int(exit_window_state, 1);
            send_message(MSG_STRING, 0, "exit_window_state == 1");

            set_state(PART:"audio_bt", "default", 0.0);
            set_state(PART:"video_bt", "default", 0.0);
            set_state(PART:"settings_bt", "default", 0.0);
            
            //set_state(PART:"exit_background"  , "visible", 0.0);
            emit("transition.test", "");
            
            set_state(PART:"confirm_exit_window", "visible", 0.0);
            set_state(PART:"yes_bt", "visible", 0.0);
            set_state(PART:"no_bt", "visible", 0.0);
            set_state(PART:"exit_bt", "exit_bt_mouse_in", 0.0);
           }

          else if (get_int(exit_window_state) == 1)
          {
            set_int(exit_window_state, 0);
            send_message(MSG_STRING, 0, "exit_window_state == 0");
            set_state(PART:"audio_bt", "default", 0.0);
            set_state(PART:"video_bt", "default", 0.0);
            set_state(PART:"settings_bt", "default", 0.0);
            set_state(PART:"exit_background"  , "default", 0.0);
            set_state(PART:"confirm_exit_window", "default", 0.0);
            set_state(PART:"yes_bt", "default", 0.0);
            set_state(PART:"no_bt", "default", 0.0);
            
            if (get_int(audio_state) == 1)
             {
              emit("main.show.audio", "");
            } 
            else if (get_int(video_state) == 1)
             {
              emit("main.show.video", "");
            }
            else if (get_int(settings_state) == 1)
             {
              emit("main.show.settings", "");
            }
          }            
        }
      }
      /******** audio_bt ********/
      program {
         name: "audio_bt_mouse_in";
         signal: "mouse,in";
         source: "audio_bt";
         action: SIGNAL_EMIT "main.show.audio" "audio_bt";
      }
      program {
         name: "main_show_audio";
         signal: "main.show.audio";
         source: "*";
         script {
            set_int(audio_state, 1);
            set_int(video_state, 0);
            set_int(settings_state, 0);
            set_int(exit_window_state, 0);

            set_state(PART:"app_window", "show_audio", 0.0);
            set_state(PART:"audio_bt", "audio_bt_mouse_in", 0.0);
            set_state(PART:"video_bt", "default", 0.0);
            set_state(PART:"settings_bt", "default", 0.0);
            set_state(PART:"confirm_exit_window", "default", 0.0);
            set_state(PART:"yes_bt", "default", 0.0);
            set_state(PART:"no_bt", "default", 0.0);
            set_state(PART:"exit_bt", "default", 0.0);
          }
      }
      program {
         name: "audio_selected";
         signal: "mouse,clicked,*";
         source: "audio_bt";
         action: SIGNAL_EMIT "main.selected.audio" "audio_bt";
      }/******** end audio_bt ********/
      /******** video_bt ********/
      program {
         name: "video_bt_mouse_in";
         signal: "mouse,in";
         source: "video_bt";
         action: SIGNAL_EMIT "main.show.video" "video_bt";
      }
      program {
         name: "main_show_video";
         signal: "main.show.video";
         source: "*";
         script {
            set_int(audio_state, 0);
            set_int(video_state, 1);
            set_int(settings_state, 0);
            set_int(exit_window_state, 0);

            set_state(PART:"app_window", "show_video", 0.0);
            set_state(PART:"audio_bt", "default", 0.0);
            set_state(PART:"video_bt", "video_bt_mouse_in", 0.0);
            set_state(PART:"settings_bt", "default", 0.0);
            set_state(PART:"confirm_exit_window", "default", 0.0);
            set_state(PART:"yes_bt", "default", 0.0);
            set_state(PART:"no_bt", "default", 0.0);
            set_state(PART:"exit_bt", "default", 0.0);
          }
      }
      program {
         name: "video_selected";
         signal: "mouse,clicked,*";
         source: "video_bt";
         action: SIGNAL_EMIT "main.selected.video" "video_bt";
      }/******** end video_bt ********/
      /******** settings_bt ********/
      program {
         name: "settings_selected";
         signal: "mouse,in";
         source: "settings_bt";
         action: SIGNAL_EMIT "main.show.settings" "settings_bt";
      }
      program {
         name: "main_show_settings";
         signal: "main.show.settings";
         source: "*";
         script {
            set_int(audio_state, 0);
            set_int(video_state, 0);
            set_int(settings_state, 1);
            set_int(exit_window_state, 0);

            set_state(PART:"app_window", "show_settings", 0.0);
            set_state(PART:"audio_bt", "default", 0.0);
            set_state(PART:"video_bt", "default", 0.0);
            set_state(PART:"settings_bt", "settings_bt_mouse_in", 0.0);
            set_state(PART:"confirm_exit_window", "default", 0.0);
            set_state(PART:"yes_bt", "default", 0.0);
            set_state(PART:"no_bt", "default", 0.0);
            set_state(PART:"exit_bt", "default", 0.0);
          }
      }
      program {
         name: "settings_bt_mouse_clicked";
         signal: "mouse,clicked,*";
         source: "settings_bt";
         action: SIGNAL_EMIT "main.selected.settings" "settings_bt";
      }/******** end settings_bt ********/
      program {
         name: "exit_bt_mouse_in";
         signal: "mouse,in";
         source: "exit_bt";
         script {
          if (exit_window_state == 0) 
           {
            set_state(PART:"audio_bt", "default", 0.0);
            set_state(PART:"video_bt", "default", 0.0);
            set_state(PART:"settings_bt", "default", 0.0);
            set_state(PART:"exit_bt", "exit_bt_mouse_in", 0.0);
            set_state(PART:"confirm_exit_window", "default", 0.0);
            set_state(PART:"yes_bt", "default", 0.0);
            set_state(PART:"no_bt", "default", 0.0);
           }
          else
           {
            set_state(PART:"audio_bt", "default", 0.0);
            set_state(PART:"video_bt", "default", 0.0);
            set_state(PART:"settings_bt", "default", 0.0);
            set_state(PART:"exit_bt", "exit_bt_mouse_in", 0.0);
           }                        
         }
      }
      program {
         name: "exit_bt_mouse_clicked";
         signal: "mouse,clicked,*";
         source: "exit_bt";
         action: SIGNAL_EMIT "main.select.back" "";
      }
      program {
            name: "transition_test";
            signal: "transition.test";
            in: 0.1 0;
            action: STATE_SET "visible" 0.0;
            transition,   SINUSOIDAL 1.0;
            target: "exit_background";
         }
      program { // this program just works if the confirm exit window is visible
         name: "yes_bt_clicked";
         signal: "mouse,clicked,*";
         source: "yes_bt";
         action: SIGNAL_EMIT "main_selected_exit" "";
      }
      program { // this program just works if the confirm exit window is visible
         name: "no_bt_clicked";
         signal: "mouse,clicked,*";
         source: "no_bt";
         script{
            set_state(PART:"exit_bt", "default", 0.0);
            set_state(PART:"exit_background"  , "default", 0.0);
            set_state(PART:"confirm_exit_window", "default", 0.0);
            set_state(PART:"yes_bt", "default", 0.0);
            set_state(PART:"no_bt", "default", 0.0);

            if (get_int(audio_state) == 1)
             {
              emit("main.show.audio", "");
            } 
            else if (get_int(video_state) == 1)
             {
              emit("main.show.video", "");
            }
            else if (get_int(settings_state) == 1)
             {
              emit("main.show.settings", "");
            }            
         }
      }/******** end exit_bt ********/
   } /* end programs */
 } /*end group "main" */
} /* end collections */ 
